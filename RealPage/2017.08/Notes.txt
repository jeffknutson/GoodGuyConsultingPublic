PowerShell
==========
Jeff Knutson
jeff@toptal.com
jeff@goodguyconsulting.com

Link to notes, labs, slides
http://tinyurl.com/RealPoshAug2017



DAY 1
=====
approved verb list  - https://msdn.microsoft.com/en-us/library/ms714428(v=vs.85).aspx

Other places to get help
------------------------
- https://ss64.com/ps
- Hey Scripting Guy! - https://blogs.technet.microsoft.com/heyscriptingguy/
- www.powershell.org
- Don Jones Learn Powershell in 30 Days of lunches Youtube: https://www.youtube.com/playlist?list=PL6D474E721138865A

General stuff
-------------
- How to change your error background colors in the PowerShell console: http://tinyurl.com/zh3hc66
- Invoke-Item .   #this opens windows explorer in the current window -- alias is: ii .

Module 3
--------
- Powershell is open source - https://github.com/PowerShell/PowerShell

Lab3
----
Get-Help and Get-Command are your friends

950am - Start  lab 3
1020am - Target end 1020am
1045am - break
1055 - start module 4


get-credential - this pops the windows credential dialog


Lab4
----
1115am - start lab 4
1135am - target end lab 4

#3 hint - Get-Command has a "Noun" and a "Verb" parameter -- there is another parameter here to help....

#5 hint - Powershell uses the verb "New" 




14.  A little help to filter the aliases down to a resonable size:
     Get-Alias -Definition "*process*"


1240pm - start lab 5

get-psprovider
set-itemproperty 

1pm - target end lab 5
	
	
315pm - start lab 6

Lab 6
-----
#1 
  - use Compare-Object cmdlet to do the file comparison
  - you can echo a string using out-file to create the files:  
    e.g.  "i am not looking into the sun" | out-file .\file1.txt
	      "i am looking into the sun" | out-file .\file2.txt

#2 is kind of a trick question...

#6 - do a get-help on export-csv; check out the parameters
#7 - same as #6		  



4pm - break and target end of lab 6
	 
	 
	 
	 
DAY 2
=====
Welcome back - Powershell All The Things!

- https://blogs.technet.microsoft.com/heyscriptingguy/2012/05/21/understanding-the-six-powershell-profiles/


Properties == Data
Methods == Actions

1100am - start lab 8

Use Get-Help, Get-Command, Get-Member


1130am - target end lab 8

lunch

12:50pm - module 9
1:30pm - start module 9 lab

#1 and #2 use the Get-ADComputer cmdlet 
- use get-member to determine the output of the first cmdlet
- use help  -full  to determine the parameters that accept input for the second cmdlet

2:00pm - target end of module 9 lab


- You can find the default powershell format files here: 
C:\Windows\System32\WindowsPowerShell\v1.0\*.ps1xml


430pm - lab 11


DAY 3
=====

webclient
try-catch 
test-path
invoke-webrequest



---ADSI---

Powershell has a lot of support for ADSI...here's a way to search for an AD user by account name:
$s = [AdsiSearcher]'(samaccountname=TODOUserIdHere)'
$t = $s.findOne()
